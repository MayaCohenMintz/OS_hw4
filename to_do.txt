TO RUN ROY'S TESTER:
1. change permissions: $ chmod +x tester 
2. compile: $ gcc -O3 -D_POSIX_C_SOURCE=200809 -Wall -std=c11 -pthread tester_from_roy_drive.c -o tester
3. run: $ ./tester 

ROY'S TESTER ON DONT_CHANGE
passes everything apart from fifo

ROY'S TESTER ON FIRST_DRAFT
passes: 
destroyQueue
enqueue and dequeue
tryDequeue
size tester

fails:
the rest, including fifo

NEXT STEPS:
write in same structure as roy 


TO DO
- create helper functions 
- figure out - what does pop_thread do? Why do I need to do 
thread->data=data after popping and before signaling? (line 217-219)
- figure out - why does a ThreadNode need the associated data?
- in line 244: why is visited incremented here? Where does the actual pop happen?
- difference in roy between dequeue and trydequeue
- in line 237: why do we need to check if th_queue.waiting is larger than size of queue?
- "else" in line 248: why do we only get here if size of queue is smaller than waiting threads?
compare this to first_draft, see how it is handled there
- in tryqueue, why is only queue.size = 0 checked?


NOTE:
